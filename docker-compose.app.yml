# =============================================================================
# Docker Compose - Node.js App (Standalone for Dokploy)
# =============================================================================
# Deploy this stack after the MongoDB stack. The app connects to MongoDB using
# MONGO_URI which should reference the 'mongo' host on the shared network.
#
# Example MONGO_URI in Dokploy envs:
#   mongodb://${MONGO_APP_USER}:${MONGO_APP_PASSWORD}@mongo:${MONGO_PORT}/${MONGO_APP_DB}?authSource=${MONGO_AUTH_SOURCE:-admin}
# =============================================================================

name: lynx-portfolio-back-app

services:
  app:
    build:
      context: .
      target: production
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        NODE_ENV: production
    image: lynx-portfolio-back-app:latest
    container_name: lynx-portfolio-back-app
    hostname: lynx-portfolio-back-app
    # Expose the app port for direct access if needed; nginx will proxy to this
    ports:
      - "${PROD_PORT:-6165}:6165"
    environment:
      NODE_ENV: production
      # Keep app at 6165 to match nginx.conf upstream
      PORT: 6165
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret}
      NGINX_HOST: ${NGINX_HOST:-localhost}
      NGINX_PORT: ${NGINX_PORT:-80}
      REDIS_URL: ${REDIS_URL:-}
      MONGO_URI: ${MONGO_URI}
      MONGO_APP_DB: ${MONGO_APP_DB:-lynx_portfolio}
      MONGO_APP_TEST_DB: ${MONGO_APP_TEST_DB:-lynx_portfolio_test}
      MONGO_APP_USER: ${MONGO_APP_USER:-database_user}
      MONGO_APP_PASSWORD: ${MONGO_APP_PASSWORD:-portfolio_pass}
      MONGO_AUTH_SOURCE: ${MONGO_AUTH_SOURCE:-admin}
      # S3 Storage Configuration
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-}
      S3_ENDPOINT: ${S3_ENDPOINT:-https://s3.amazonaws.com}
      S3_UPLOAD_PREFIX: ${S3_UPLOAD_PREFIX:-uploads/}
      S3_KMS_KEY_ARN: ${S3_KMS_KEY_ARN:-}
      # CloudFront CDN Configuration
      CLOUDFRONT_DOMAIN: ${CLOUDFRONT_DOMAIN:-}
      CLOUDFRONT_DISTRIBUTION_ID: ${CLOUDFRONT_DISTRIBUTION_ID:-}
      # AWS IAM Configuration
      AWS_ROLE_TO_ASSUME: ${AWS_ROLE_TO_ASSUME:-}
    volumes:
      - node_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PROD_PORT:-6165}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

networks:
  default:
    external: true
    name: lynx-portfolio-back-network

volumes:
  node_logs:
    name: lynx-portfolio-back-logs
    driver: local
