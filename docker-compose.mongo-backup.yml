# =============================================================================
# Docker Compose - Mongo Backup (Standalone for Dokploy)
# =============================================================================
# Deploy this stack after MongoDB. It runs cron-based backups via the
# dedicated mongo-backup image and can upload to S3 if configured.
# =============================================================================

name: ${APP_NAME:-lynx-portfolio-back}-mongo-backup

services:
  mongo-backup:
    build:
      context: .
      dockerfile: Dockerfile.mongo-backup
    image: ${APP_NAME:-lynx-portfolio-back}-mongo-backup:latest
    container_name: ${APP_NAME:-lynx-portfolio-back}-mongo-backup
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: ${MONGO_PORT:-27017}
      MONGO_DB: ${MONGO_APP_DB:-lynx_portfolio}
      MONGO_USER: ${MONGO_APP_USER:-portfolio}
      MONGO_PASS: ${MONGO_APP_PASSWORD:-portfolio_pass}
      S3_BUCKET: ${S3_BUCKET_NAME}
      S3_PATH: backups
      S3_ENDPOINT: ${S3_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${S3_REGION}
      TZ: UTC
    volumes:
      - mongo_data:/data/db:ro
      - ./scripts:/scripts:ro
      - ./mongo_backups:/mongo_backups
    healthcheck:
      test: ["CMD", "bash", "-c", "ls /mongo_backups/mongo_backup_*.gz 2>/dev/null | tail -n 1"]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 3m
    restart: unless-stopped

networks:
  default:
    external: true
    name: ${APP_NAME:-lynx-portfolio-back}-network

volumes:
  mongo_data:
    external: true
    name: ${APP_NAME:-lynx-portfolio-back}-mongo-data
