{
  "name": "portfoliolynxpardelle",
  "version": "2.0.0",
  "description": "Lynx Pardelle Portfolio",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "test:unit": "jest --testPathPattern=unit",
    "test:regression": "jest --testPathPattern=regression",
    "test:ci": "jest --coverage --ci --watchAll=false",
    "perf:upload": "k6 run tests/performance/upload-stress.js",
    "perf:cdn": "k6 run tests/performance/cdn-latency.js",
    "perf:load": "artillery run tests/performance/load-test.yml",
    "perf:baseline": "node tests/performance/baseline-collector.js",
    "perf:report": "node tests/performance/performance-reporter.js",
    "perf:all": "npm run perf:baseline && npm run perf:upload && npm run perf:cdn && npm run perf:load && npm run perf:report",
    "profile:cpu": "clinic doctor -- node index.js",
    "profile:memory": "clinic heapprofiler -- node index.js",
    "benchmark": "autocannon -c 10 -d 30 http://localhost:6164",
    "s3:health": "node utility/check-s3-health.js",
    "s3:health:detailed": "node utility/check-s3-health.js --detailed",
    "cost:monitor": "node utility/cost-monitor.js",
    "monitoring:test": "node -e \"const s3 = require('./services/s3'); s3.putMetric('TestMetric', 1, 'Count').then(() => console.log('âœ… Monitoring test successful')).catch(console.error)\"",
    "canary:validate": "curl -X POST http://localhost:6164/api/canary/validate",
    "canary:start": "curl -X POST http://localhost:6164/api/canary/start",
    "canary:status": "curl http://localhost:6164/api/canary/dashboard",
    "canary:rollback": "curl -X POST http://localhost:6164/api/canary/rollback -H \"Content-Type: application/json\" -d '{\"reason\": \"Manual rollback\"}'",
    "canary:health": "curl http://localhost:6164/api/canary/health",
    "monitoring:start": "curl -X POST http://localhost:6164/api/monitoring/start -H \"Content-Type: application/json\" -d '{\"duration\": 48, \"checkInInterval\": 6}'",
    "monitoring:stop": "curl -X POST http://localhost:6164/api/monitoring/stop -H \"Content-Type: application/json\" -d '{\"reason\": \"manual\"}'",
    "monitoring:status": "curl http://localhost:6164/api/monitoring/status",
    "monitoring:dashboard": "curl http://localhost:6164/api/monitoring/dashboard",
    "monitoring:health": "curl http://localhost:6164/api/monitoring/health",
    "monitoring:report": "curl http://localhost:6164/api/monitoring/report",
    "monitoring:incidents": "curl http://localhost:6164/api/monitoring/incidents",
    "monitoring:test-alert": "curl -X POST http://localhost:6164/api/monitoring/test-alert -H \"Content-Type: application/json\" -d '{\"severity\": \"low\", \"message\": \"Test alert for system validation\"}'",
    "monitoring:pause": "curl -X POST http://localhost:6164/api/monitoring/pause",
    "monitoring:resume": "curl -X POST http://localhost:6164/api/monitoring/resume",
    "rollback:status": "curl http://localhost:6164/api/rollback/status",
    "rollback:trigger": "curl -X POST http://localhost:6164/api/rollback/trigger -H \"Content-Type: application/json\" -d '{\"reason\": \"manual\", \"description\": \"Manual rollback via NPM script\", \"initiatedBy\": \"npm-user\"}'",
    "rollback:monitoring:start": "curl -X POST http://localhost:6164/api/rollback/monitoring/start",
    "rollback:monitoring:stop": "curl -X POST http://localhost:6164/api/rollback/monitoring/stop",
    "rollback:timeline": "curl http://localhost:6164/api/rollback/timeline",
    "rollback:health": "curl http://localhost:6164/api/rollback/health",
    "rollback:dashboard": "curl http://localhost:6164/api/rollback/dashboard",
    "rollback:report": "curl http://localhost:6164/api/rollback/report",
    "rollback:validate": "curl -X POST http://localhost:6164/api/rollback/validate",
    "rollback:test-trigger": "curl -X POST http://localhost:6164/api/rollback/test-trigger -H \"Content-Type: application/json\" -d '{\"type\": \"test\", \"message\": \"Test rollback trigger\"}'",
    "cdn:invalidate": "node utility/create-media-backup.js",
    "cdn:invalidate:dry-run": "node utility/create-media-backup.js --dry-run",
    "cdn:backup": "node utility/create-media-backup.js",
    "cdn:backup:dry-run": "node utility/create-media-backup.js --dry-run",
    "cdn:status": "node -e \"console.log('S3 Bucket:', process.env.S3_BUCKET_NAME || 'Not set'); console.log('CloudFront Distribution:', process.env.CLOUDFRONT_DISTRIBUTION_ID || 'Not set'); console.log('CloudFront Domain:', process.env.CLOUDFRONT_DOMAIN || 'Not set');\"",
    "cost:analysis": "node utility/cost-performance-monitor.js",
    "cost:analysis:quarterly": "node utility/cost-performance-monitor.js --quarterly",
    "cost:analysis:weekly": "node utility/cost-performance-monitor.js --weekly",
    "cost:optimize": "node utility/cost-optimization-analyzer.js",
    "cost:optimize:recommendations": "node utility/cost-optimization-analyzer.js recommendations",
    "perf:analytics": "node utility/performance-analytics.js",
    "perf:analytics:report": "node utility/performance-analytics.js report",
    "perf:analytics:48h": "node utility/performance-analytics.js analyze 48h",
    "review:dashboard": "node utility/review-dashboard-generator.js",
    "review:dashboard:weekly": "node utility/review-dashboard-generator.js --weekly",
    "review:dashboard:quarterly": "node utility/review-dashboard-generator.js --quarterly",
    "review:dashboard:full": "node utility/review-dashboard-generator.js --quarterly --verbose",
    "improvement:analytics": "node utility/improvement-analytics-engine.js analyze",
    "improvement:analytics:report": "node utility/improvement-analytics-engine.js report",
    "improvement:analytics:24h": "node utility/improvement-analytics-engine.js analyze 24h",
    "improvement:analytics:weekly": "node utility/improvement-analytics-engine.js analyze 7d",
    "improvement:analytics:status": "node utility/improvement-analytics-engine.js status",
    "feedback:collect": "node utility/feedback-collection-system.js collect",
    "feedback:report": "node utility/feedback-collection-system.js report",
    "feedback:report:monthly": "node utility/feedback-collection-system.js report 30d",
    "feedback:analytics": "node utility/feedback-collection-system.js analytics",
    "feedback:status": "node utility/feedback-collection-system.js status",
    "innovation:submit": "node utility/innovation-framework.js submit",
    "innovation:pipeline": "node utility/innovation-framework.js pipeline",
    "innovation:report": "node utility/innovation-framework.js report",
    "innovation:status": "node utility/innovation-framework.js status",
    "benchmark:realtime": "node utility/benchmarking-system.js realtime",
    "benchmark:daily": "node utility/benchmarking-system.js daily",
    "benchmark:weekly": "node utility/benchmarking-system.js weekly",
    "benchmark:competitive": "node utility/benchmarking-system.js competitive",
    "benchmark:report": "node utility/benchmarking-system.js report",
    "benchmark:status": "node utility/benchmarking-system.js status",
    "ci:full-analysis": "npm run improvement:analytics:weekly && npm run feedback:analytics && npm run learning:analyze && npm run benchmark:weekly",
    "ci:comprehensive-report": "npm run improvement:analytics:report && npm run feedback:report:monthly && npm run learning:report && npm run innovation:report && npm run benchmark:report && npm run knowledge:report",
    "ci:daily-check": "npm run improvement:analytics:24h && npm run benchmark:daily && npm run knowledge:freshness",
    "ci:weekly-review": "npm run ci:full-analysis && npm run knowledge:evolve && npm run innovation:pipeline",
    "ci:status-all": "npm run improvement:analytics:status && npm run feedback:status && npm run learning:status && npm run innovation:status && npm run benchmark:status && npm run knowledge:status"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LynxPardelle/portfolioLynxPardelle.git"
  },
  "keywords": [
    "portfolio",
    "lynx",
    "pardelle",
    "nodejs",
    "express",
    "mongodb",
    "backend",
    "api",
    "authentication",
    "jwt",
    "bcrypt",
    "nodemailer",
    "multer",
    "cors",
    "validator",
    "moment",
    "api"
  ],
  "author": "Lynx Pardelle <lynxpardelle@lynxpardelle.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/LynxPardelle/portfolioLynxPardelle/issues"
  },
  "homepage": "https://github.com/LynxPardelle/portfolioLynxPardelle#readme",
  "dependencies": {
    "@aws-sdk/client-cloudfront": "^3.896.0",
    "@aws-sdk/client-cloudwatch": "^3.896.0",
    "@aws-sdk/client-cost-explorer": "^3.898.0",
    "@aws-sdk/client-iam": "^3.896.0",
    "@aws-sdk/client-s3": "^3.896.0",
    "@aws-sdk/client-sts": "^3.896.0",
    "@aws-sdk/lib-storage": "^3.896.0",
    "@aws-sdk/s3-request-presigner": "^3.896.0",
    "axios": "^1.7.7",
    "bcrypt": "^6.0.0",
    "cors": "^2.8.5",
    "dotenv": "^17.2.2",
    "express": "^4.21.2",
    "jwt-simple": "^0.5.6",
    "moment": "^2.30.1",
    "mongoose": "^8.18.2",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.6",
    "sharp": "^0.34.4",
    "validator": "^13.15.15"
  },
  "//": "Note: k6 must be installed separately as a binary. See docs/performance-testing-documentation.md for installation instructions.",
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "archiver": "^7.0.1",
    "artillery": "^2.0.26",
    "autocannon": "^8.0.0",
    "aws-sdk-mock": "^6.2.1",
    "clinic": "^9.1.0",
    "jest": "^30.1.3",
    "jest-environment-node": "^30.1.2",
    "nodemon": "^3.1.10",
    "supertest": "^6.3.4"
  }
}